name: Checks and Validation
on:
  pull_request:


jobs:
  build_and_test_linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo and rust files
        id: rust_cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: "build_and_test_linux"

      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-features --profile linux

      - name: Upload Test Result File
        uses: actions/upload-artifact@v4
        with:
          name: test-results-linux
          path: ${{ github.workspace }}/target/nextest/linux/junit-linux.xml
          retention-days: 5

  build_and_test_windows:
    name: Build and Test (Windows)
    runs-on: windows-latest
    steps:
      - name: Prepare symlink configuration
        run: git config --global core.symlinks true

      - run: choco install ninja

      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo and rust files
        id: rust_cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: "build_and_test_windows"

      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-features --profile windows

      - name: Upload Test Result File
        uses: actions/upload-artifact@v4
        with:
          name: test-results-windows
          path: ${{ github.workspace }}/target/nextest/windows/junit-windows.xml
          retention-days: 5

  build_and_test_macos:
    name: Build and Test (Mac OS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo and rust files
        id: rust_cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: "build_and_test_macos"

      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-features --profile macos

      - name: Upload Test Result File
        uses: actions/upload-artifact@v4
        with:
          name: test-results-macos
          path: ${{ github.workspace }}/target/nextest/macos/junit-macos.xml
          retention-days: 5

  comment_results:
    permissions:
      checks: write
      pull-requests: write
    name: Comment Results to PR
    runs-on: ubuntu-latest
    needs:
      - build_and_test_linux
      - build_and_test_windows
      - build_and_test_macos
    steps:
      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          merge-multiple: true
          path: test-results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            test-results/**/*.xml
