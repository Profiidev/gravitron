name: Open a release PR
on:
  workflow_dispatch:
    inputs:
      crate:
        description: Crate to release
        required: true
        type: choice
        options:
          - gravitron
          - gravitron_ecs
          - gravitron_ecs_macros
          - gravitron_utils
      version:
        description: Version to release
        required: true
        type: string

jobs:
  make-release-pr:
    permissions:
      id-token: write # Enable OIDC
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chainguard-dev/actions/setup-gitsign@main

      - name: cargo-release restore Cache
        id: cargo_release_cache_restore
        uses: actions/cache/restore@v4
        with:
          path: ~/.cargo/bin/cargo-release
          key: ${{ runner.os }}-cargo-release
      - run: cargo install cargo-release
        id: cargo_release_build
        if: steps.cargo_release_cache_restore.outputs.cache-hit != 'true'

      - uses: cargo-bins/release-pr@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ inputs.version }}
          crate-name: ${{ inputs.crate }}

      - name: cargo-release save Cache
        id: cargo_release_cache_save
        if: always() && (steps.cargo_release_build.outcome == 'success' || steps.cargo_release_build.outcome == 'skipped')
        uses: actions/cache/save@v4
        with:
          path: ~/.cargo/bin/cargo-release
          key: ${{ runner.os }}-cargo-release